Grafo: W(w*h + 8(w*h)/7 + 8*w/7) // Armazena todos os pixels como vertice,
								//  e cada pixel armazena uma referência para seus adjacentes.
								//  e alocar o pixel inicial da busca pelo caminho minimo.
								//  O ponteiro para a estrutura ocupa 7 vezes menos espaço que a estrutura.

	Djikstra: W(w*h + 8(w*h)/7 + 8*w/7) // O Heap é uma cópia de todos os vértices
	Rotacionar: W(w*h + 8(w*h)/7 + 8*w/7) // Uma cópia de todos os vértices. Transpor.

	Memoria total: (w*h + 8(w*h)/7 + 8*w/7) + N * (w*h + 8(w*h)/7 + 8*w/7) + c * (w*h + 8(w*h)/7 + 8*w/7)
	// Memoria da imagem + memoria de N djikstras aplicados + memoria necessária para transpor
	// c { 0, se não precisa rotacionar, 
		   1, se precisa rotacionar}

Matriz: W(w*h) // Precisa armazenar apenas a imagem.
	Rotacionar: W(w*h) // Uma cópia de todos os vértices. Transpor.
	Memoria total: w*h + c * w*h
	// c { 0, se não precisa rotacionar, 
		   1, se precisa rotacionar}


